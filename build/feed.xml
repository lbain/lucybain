<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lucy Bain</title>
  <id>http://lucybain.com/blog</id>
  <link href="http://lucybain.com/blog"/>
  <link href="http://lucybain.com/feed.xml" rel="self"/>
  <updated>2015-01-10T00:00:00Z</updated>
  <author>
    <name>Lucy Bain</name>
  </author>
  <entry>
    <title>JS: How does ajax work?</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/js-how-does-ajax-work/"/>
    <id>http://lucybain.com/blog/2015/js-how-does-ajax-work/</id>
    <published>2015-01-10T00:00:00Z</published>
    <updated>2015-01-19T19:23:38+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;How does AJAX work?&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s start smaller: &lt;strong&gt;What does AJAX stand for?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;synchronous &lt;strong&gt;J&lt;/strong&gt;avaScript &lt;strong&gt;a&lt;/strong&gt;nd &lt;strong&gt;X&lt;/strong&gt;ML (I think using the &amp;quot;a&amp;quot; in &amp;quot;and&amp;quot; is a little bit of a cheat, but there you go.)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So how does it work?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After loading, the client uses &lt;strong&gt;J&lt;/strong&gt;avaScript to fire off a request to the server and listens to the response &lt;strong&gt;a&lt;/strong&gt;synchronously. The response that comes back can be &lt;strong&gt;X&lt;/strong&gt;ML, but is often other formats, most often JSON (officially this is known as AJAJ, but everyone still calls it AJAX).&lt;/p&gt;

&lt;p&gt;The bit that makes AJAX so powerful is that it can update the page &lt;em&gt;after&lt;/em&gt; it has finished loading. Before AJAX any new content required an entire page refresh, even if it was only a small change. This meant that users had to redownload a page for very little updated content (especially annoying in the 90s since home internet wasn&amp;#39;t as fast then). Using AJAX meant that the front end could change without a full page refresh, thus giving a much faster response time.&lt;/p&gt;

&lt;p&gt;Origially AJAX mostly returned HTML/XML snipits and the DOM would get updated with this new code when the AJAX returned. Now, however, it&amp;#39;s more common for AJAX to get data and update the DOM as needed rather than doing a swap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Ajax_%28programming%29"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1510011/how-does-ajax-work"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/Learn/What_is_AJAX_and_how_does_it_work"&gt;Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>JS: When would you use document.write()?</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/js-document-write/"/>
    <id>http://lucybain.com/blog/2015/js-document-write/</id>
    <published>2015-01-06T00:00:00Z</published>
    <updated>2015-01-11T20:08:40+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;When would you use &lt;code&gt;document.write()&lt;/code&gt;?&lt;/h2&gt;

&lt;p&gt;First, what is &lt;code&gt;document.write()&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;As you might have guessed, &lt;code&gt;document.write()&lt;/code&gt; writes to the document (a.k.a web page). It takes the content you want to write as a parameter. An invocation could look like this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;document.write("&amp;lt;h1&amp;gt;JS is awesome!&amp;lt;/h1&amp;gt;");
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Problems with &lt;code&gt;document.write()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try running the code above in the console of a web page (not this one!), go ahead, I&amp;#39;ll wait.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll notice that it replaced the entire content of the &lt;code&gt;document&lt;/code&gt; with the header &lt;code&gt;&amp;quot;JS is awesome!&amp;quot;&lt;/code&gt;. Obviously that&amp;#39;s a problem right there - &lt;code&gt;document.write()&lt;/code&gt; shouldn&amp;#39;t be used after the page has loaded to change the content as it will overwrite the entire page (probably not what you wanted to happen...).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;document.write()&lt;/code&gt; doesn&amp;#39;t work for XHTML pages. I&amp;#39;ve only been concerned with HTML so far, so I&amp;#39;m not too fussed about this one. But it might be more relevant in your case.&lt;/p&gt;

&lt;p&gt;Some people think &lt;code&gt;document.write()&lt;/code&gt; is a good solution for loading more files (JS or CSS) into the dom after the initial load. Turns out this is not the case, as this is slower than creating a new element (script or a css link) and inserting it into the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Possible situations to use &lt;code&gt;document.write()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It seems that the only &amp;quot;approved&amp;quot; time to use &lt;code&gt;document.write()&lt;/code&gt; is for third party code to be included (such as ads or Google Analytics). Since &lt;code&gt;document.write()&lt;/code&gt; is always available (mostly) it is a good choice for third party vendors to use it to add their scripts. They don&amp;#39;t know what environment you&amp;#39;re using, if jQuery is or isn&amp;#39;t available, or what your &lt;code&gt;onload&lt;/code&gt; events are. And with &lt;code&gt;document.write()&lt;/code&gt; they don&amp;#39;t have to.&lt;/p&gt;

&lt;p&gt;So don&amp;#39;t use it yourself, unless your working for the third party.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/802854/why-is-document-write-considered-a-bad-practice"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/document.write"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stevesouders.com/blog/2012/04/10/dont-docwrite-scripts/"&gt;steve Souders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.quirksmode.org/blog/archives/2005/06/three_javascrip_1.html"&gt;Quirksmode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Retro from my coding test</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/code-test-retro/"/>
    <id>http://lucybain.com/blog/2015/code-test-retro/</id>
    <published>2015-01-02T00:00:00Z</published>
    <updated>2015-01-11T18:22:04+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;#39;ve been looking for a new job over the past month. As part of my interview process I had to do an at home coding exercise. The directions were simple, but disconcertingly vague:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The application should run successfully in modern browsers.
Your app should retrieve a data set from a persistence layer or data service of your choice.&lt;/li&gt;
&lt;li&gt;The data set should contain a minimum of 4 columns and 5 rows.&lt;/li&gt;
&lt;li&gt;Create a README file with instructions, a brief description of your app with reasons for your approach and technology as well as any future enhancements you would make given more time&lt;/li&gt;
&lt;li&gt;Bundle your app in a zip file and email to [the company]&lt;/li&gt;
&lt;li&gt;Allow up to 3 hours for this task. Please be honest with your allocation of time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, so three hours is way too long for a simple AJAX call and display of four columns and five rows. So I figured they wanted something a little more interesting than a table of data. I also didn&amp;#39;t want to waste any of my precious three hours working on a back-end - I applied for a front-end role and that&amp;#39;s what I wanted to work on. I decided to work with data from Facebook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; It turns out there&amp;#39;s a TON of very interesting &lt;a href="https://www.reddit.com/r/datasets"&gt;data avaialble&lt;/a&gt;. If you have to do anything like this in the future look into these rather than using FB!&lt;/p&gt;

&lt;p&gt;I wanted to work with something real that users might care about. I also wanted to get more experience with working with Facebook since it&amp;#39;s often used on sites. These were great reasons to choose Facebook, but, as it turns out, probably not a good decision for a coding test. Working with FB requires OAuth and a bunch of setup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Don&amp;#39;t try to work with anything particularly complex for your coding test. It&amp;#39;s better that you do a simple thing well than that you don&amp;#39;t finish a complex thing.&lt;/p&gt;

&lt;p&gt;Thankfully I used a library called &lt;a href="http://adodson.com/hello.js/"&gt;hello.js&lt;/a&gt; that took care of most of the setup. However I had never worked with hello.js before and getting up to speed with it took time - which I was rapidly running out of. I ended up wasting an hour trying to debug &lt;a href="http://stackoverflow.com/questions/27729186/how-can-i-get-share-data-with-hello-js"&gt;something&lt;/a&gt; which I never really got an answer to - I ended up going a different direction and resetting the clock for that hour.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Don&amp;#39;t work with new technologies / libraries / languages for your coding test. Focus on what you&amp;#39;re already good at and do that thing well.&lt;/p&gt;

&lt;p&gt;I got all my interaction working as expected and then got moving on the styling. I grabbed a generated colour pallet from &lt;a href="http://coolors.co/"&gt;coolors.co&lt;/a&gt; and set up some base styles. It wasn&amp;#39;t anything fancy, it was kinda mobile friendly, but only in the roughest sense, and things looked sorta ok. But it worked, and it no longer looked like simple HTML. This was a success, I&amp;#39;m pleased with the amount of time I spent on styling.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Styling matters. It&amp;#39;s the first thing your users (read graders) will see. Don&amp;#39;t just gloss over it because it&amp;#39;s not your main love. That said, your users will know that you only had a set amount of time to work on something. This does not need to be pixel perfect. Make it nice, but don&amp;#39;t waste your time.&lt;/p&gt;

&lt;p&gt;Finally it was time to run some full tests. I grabbed my partner and asked him to try logging in with my app so I could get his user details (photos). No dice. Errors. Panic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; When you&amp;#39;re developing your code test, try to test it in the same environment the user will have as early as possible. Identify possible rough patches and take note. Even if you can&amp;#39;t fix them you can at least know you&amp;#39;ll need to include something about them in the readme.&lt;/p&gt;

&lt;p&gt;As I found out in my increasingly stressed out state - FB requires you to officially publish your app before you&amp;#39;re allowed to get the public to use it (fair enough, but I had hours before my test was due). I also learned that the process would take around seven days, but that it&amp;#39;s possible my app could be rejected and take longer. I was full on freaking out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Much like in school, you should start your coding test as soon as you get your assignment.&lt;/p&gt;

&lt;p&gt;I finally worked out that if I made my partner a developer for the app he would have access to it, and thus be able to see all the hard work I&amp;#39;d done. I calmed down a bit and made sure everything was working as it should from then it. (It was; that was the bit I was able to easily test using my own account.)&lt;/p&gt;

&lt;p&gt;That was the end of my three hours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Make sure you write down the start and end times of any work sections you do. I thought I&amp;#39;d remember, and I&amp;#39;m pretty sure I was fairly accurate, but I&amp;#39;m sure I wasn&amp;#39;t perfect. Guesstimating exactly how many minutes you&amp;#39;ve spent on a coding test is stress you don&amp;#39;t need.&lt;/p&gt;

&lt;p&gt;I moved on to the readme. I was actually pretty pleased how this turned out. In their directions they included what they expected from a readme (&amp;quot;a brief description of your app with reasons for your approach and technology as well as any future enhancements you would make given more time&amp;quot;), which was my guide. I also included a section about how to use my app, since they had to request permission to be a developer in order to get it working.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Try to make it as easy as possible for your reviewers to grade your code. Keep the install process as short, and your explanation of the install process as clear, as possible.&lt;/p&gt;

&lt;p&gt;I spent the most time on the &amp;quot;future enhancements&amp;quot; which included a lot about refactoring. I wasn&amp;#39;t able to do everything I wanted to have beautiful code given the time constraints. I wanted them to know that I knew things weren&amp;#39;t perfect. This was a good tactic - the couple of things they asked me about in my next interview were a the things I hadn&amp;#39;t mentioned in my readme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; The more questions you can answer in your readme (in the comfort of your own home), the fewer you have to answer in the interview (with someone staring at you).&lt;/p&gt;

&lt;p&gt;And that was it! It was pretty stressful, so I hope the next time I need to do a coding test I&amp;#39;ll have learned a little and can stay a bit more calm!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JS: don't touch the global scope</title>
    <link rel="alternate" href="http://lucybain.com/blog/2014/js-dont-touch-global-scope/"/>
    <id>http://lucybain.com/blog/2014/js-dont-touch-global-scope/</id>
    <published>2014-12-30T00:00:00Z</published>
    <updated>2015-01-11T18:57:24+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;One of the last installments from my series on &lt;a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions#js"&gt;javascript interview questions&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?&lt;/h2&gt;

&lt;p&gt;Form most languages, global variables are &lt;a href="http://en.wikipedia.org/wiki/Global_variable#Use"&gt;considered&lt;/a&gt; a &amp;quot;bad thing&amp;quot;. JS is no different, but it probably has more severe consequences than most languages.&lt;/p&gt;

&lt;p&gt;Some points on why &lt;strong&gt;global variables are generally bad&lt;/strong&gt; (taken from &lt;a href="http://c2.com/cgi/wiki?GlobalVariablesAreBad"&gt;Cunningham &amp;amp; Cunningham&lt;/a&gt; with modifications for easier reading):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;#39;s harder to read the code and reason about it when variables seem to appear out of thin air (but really from the global scope).&lt;/li&gt;
&lt;li&gt;Anyone can update a global variable from any point in the program at any time (and from any thread if there&amp;#39;s more than one going).&lt;/li&gt;
&lt;li&gt;General &lt;a href="http://en.wikipedia.org/wiki/Code_smell"&gt;code smell&lt;/a&gt; - if you&amp;#39;re too lazy to put the variable only where it needs to be then what other corners are you cutting?&lt;/li&gt;
&lt;li&gt;It&amp;#39;s probable that you&amp;#39;ll encounter global variable name clashes. Since there&amp;#39;s only one namespace you&amp;#39;re more likely to double up on a variable name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Global variables are particularly bad for JS.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not only are all of those points above true (and a few others I didn&amp;#39;t include), but for JS specifically global variables can be particularly problematic. This is because JS defaults all variables to the global scope unless they are explicitly defined elsewhere. Here&amp;#39;s an example:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;function badlyScoped() {
    globalVariable = "I'm a global variable";
}

badlyScoped();
console.log(globalVariable); // logs "I'm a global variable"
&lt;/pre&gt;
&lt;p&gt;Well isn&amp;#39;t that terrifying! We thought we were creating a local variable, since it was defined within a function, but nope! We forgot the &lt;code&gt;var&lt;/code&gt; keyword, which would make the variable local. Here&amp;#39;s a corrected version:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;function wellScoped() {
    var localVariable = "I'm a local variable";
}

wellScoped();
console.log(localVariable); // throws: "localVariable is not defined"
&lt;/pre&gt;
&lt;p&gt;This is a quirk (&lt;a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742"&gt;some say&lt;/a&gt; a mistake) of JS. It makes global variables particularly dangerous since you might not even know you were creating one. So watch your back and don&amp;#39;t forget to use &lt;code&gt;var&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a more in depth discussion about &lt;a href="http://c2.com/cgi/wiki?GlobalVariablesAreBad"&gt;why globals are bad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;some ways to &lt;a href="http://stackoverflow.com/questions/1841916/how-to-avoid-global-variables-in-javascript"&gt;avoid global variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/2613310/ive-heard-global-variables-are-bad-what-alternative-solution-should-i-use"&gt;stackoverflow&lt;/a&gt; question about why globals are bad&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>JS: ternary expressions</title>
    <link rel="alternate" href="http://lucybain.com/blog/2014/js-ternary/"/>
    <id>http://lucybain.com/blog/2014/js-ternary/</id>
    <published>2014-12-26T00:00:00Z</published>
    <updated>2014-12-26T18:36:12+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Why is it called a Ternary expression, what does the word &amp;quot;Ternary&amp;quot; indicate?&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s answer the second question first: what does the word &amp;quot;ternary&amp;quot; indicate? According to &lt;a href="http://en.wikipedia.org/wiki/Ternary_operation"&gt;Wikipedia&lt;/a&gt; the word &amp;quot;ternary&amp;quot; comes from the n-ary word setup. Other examples of n-ary words are u&lt;strong&gt;nary&lt;/strong&gt; and bi&lt;strong&gt;nary&lt;/strong&gt;. All of these (including ternary) are operands. The prefix section of their name lists how many inputs the operand accepts.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;unary&lt;/strong&gt; operand accepts one parameter, e.g. &lt;code&gt;-1&lt;/code&gt;, where &lt;code&gt;-&lt;/code&gt; is the operand, and 1 is the parameter.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;binary&lt;/strong&gt; operand accepts two parameters, e.g. &lt;code&gt;2 + 3&lt;/code&gt;, where &lt;code&gt;+&lt;/code&gt; is the operand, and &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; are the parameters.&lt;/p&gt;

&lt;p&gt;So a &lt;strong&gt;ternary&lt;/strong&gt; operand accepts three parameters.&lt;/p&gt;

&lt;p&gt;In programming the ternary operand we use is a rewrite of an if statement. Before we write an actual ternary, we&amp;#39;ll just take a quick look at an if statement:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;if(conditional) { // one
    truethy_block // two
} else {
    falsey_block // three
}
&lt;/pre&gt;
&lt;p&gt;You can see there are three sections to an if statement. Let&amp;#39;s write them as a property ternary expression:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;conditional ? truethy_block : falsey_block
&lt;/pre&gt;
&lt;p&gt;All the same code is there, but it&amp;#39;s arranged slightly differently. The ternary&amp;#39;s operand looks like &lt;code&gt;?:&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In JS ternarys are often used for assignment:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;is_sunny = true;
var weather = is_sunny ? 'Sunny' : 'Cloudy';
console.log(weather); // logs 'Sunny'
&lt;/pre&gt;
&lt;p&gt;They can also be used for very short conditional statements. But be wary of using them for long or complex logic as they are harder to read than traditional statements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/%3F:"&gt;&lt;code&gt;?:&lt;/code&gt;&lt;/a&gt; on Wikipedia&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Unary_operation"&gt;unary operands&lt;/a&gt; on Wikipedia&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Binary_operation"&gt;binary operands&lt;/a&gt; on Wikipedia&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/6259982/js-how-to-use-the-ternary-operator"&gt;Stackoverflow&lt;/a&gt; about using the JS ternary operand specifically&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>JS: same-origin policy</title>
    <link rel="alternate" href="http://lucybain.com/blog/2014/same-origin-policy/"/>
    <id>http://lucybain.com/blog/2014/same-origin-policy/</id>
    <published>2014-12-20T00:00:00Z</published>
    <updated>2014-12-26T10:36:45+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Explain the same-origin policy with regards to JavaScript.&lt;/h2&gt;

&lt;p&gt;The same-origin policy helps prevent malicious attacks by stopping code from another site executing on your site. An attacks like this is known as a &lt;a href="http://en.wikipedia.org/wiki/Cross-site_scripting"&gt;Cross Site Scripting&lt;/a&gt; attack.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How does JS decide if it&amp;#39;s a &amp;quot;same&amp;quot; site?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &amp;quot;origin&amp;quot; is the same if three things are the same: the protocol (http vs. https), the domain (subdomain.yoursite.com vs. yoursite.com vs. google.com), and the port (:80 vs. :4567). If all three of these line up, then JS views the sites as the same, and code is executed. If any of them are different then the code is marked as potentially malicious and is not run.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hmmm, if I own &amp;quot;subdomain.yoursite.com&amp;quot; and &amp;quot;yoursite.com&amp;quot; I might want to share resources. This same-origin policy could be really annoying!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s possible to work around the subdomain problem. You can change the domain of a page, so it can access it&amp;#39;s parent&amp;#39;s resources:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;// in the code on subdomain.yoursite.com
document.domain = "yoursite.com";
&lt;/pre&gt;
&lt;p&gt;There are a couple other pieces to remember about changing the domain (mostly about the port). You can read about them &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#Changing_origin"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"&gt;Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/11474336/same-origin-policy-in-layman-terms"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Same-origin_policy"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
