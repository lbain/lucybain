<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lucy Bain</title>
  <id>http://lucybain.com/blog</id>
  <link href="http://lucybain.com/blog"/>
  <link href="http://lucybain.com/feed.xml" rel="self"/>
  <updated>2015-03-08T00:00:00Z</updated>
  <author>
    <name>Lucy Bain</name>
  </author>
  <entry>
    <title>Rails Girls - March 2015</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/rails-girls/"/>
    <id>http://lucybain.com/blog/2015/rails-girls/</id>
    <published>2015-03-08T00:00:00Z</published>
    <updated>2015-03-22T09:38:41+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Phew! Rails Girls Sydney, March 2015 was on Friday and Saturday, I wanted to update you&lt;/p&gt;

&lt;p&gt;Usually the Sydney Rails community runs a Rails Girls event every four-ish months. I&amp;#39;ve always enjoyed mentoring at them, but I&amp;#39;ve never organised one before . It&amp;#39;s a great way to give back to the community and encourage new programmers. It&amp;#39;s also aimed at women, which is something I&amp;#39;m also passionate about.&lt;/p&gt;

&lt;p&gt;The woman who organised the events in the past has moved to NYC (good for her, but sad for us). What with her leaving, and us not knowing what to do we took longer to run this event than usual. It ended up being about eight months between workshops.&lt;/p&gt;

&lt;p&gt;I had a surprise bonus two weeks off between jobs while waiting for my visa to get transfered properly. It turns out we absolutely needed at least one of those weeks off to prepare for the workshop full time. I hadn&amp;#39;t realised how much work was involved in one of these. I&amp;#39;m very grateful to the previous organiser, who did such a wonderful job.&lt;/p&gt;

&lt;p&gt;In the end we had about 45 attendees come and learn Rails with us. Not all of them were there for both days, some had to leave early, or weren&amp;#39;t able to come for Friday night. I had hopped for a few more attendees (50-55 was my goal), but everyone who was there was learning enthusiastically.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Rails Girls Friday Hug" src="/images/blog/rails-girls.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;m going to meet with another organiser to talk about what we did well, and what could have been better. There were a lot of things I didn&amp;#39;t know since it was the first time I organised it. Hopefully we can get most of those written down for next time!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Algorithms study group</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/algorithms-study-group/"/>
    <id>http://lucybain.com/blog/2015/algorithms-study-group/</id>
    <published>2015-01-28T00:00:00Z</published>
    <updated>2015-03-19T21:09:40+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Last year I ran two study groups, one for &lt;a href="http://codesydney.com/2014-js"&gt;JS&lt;/a&gt; and one for &lt;a href="/python"&gt;intro to programming&lt;/a&gt;. I also gave a talk about &lt;a href="https://docs.google.com/presentation/d/18lYj02Tc0dBbAAngrYBGPRSbADnswkjnyAdoeD--WQ4/edit?usp=sharing"&gt;starting a study group&lt;/a&gt; at Girl Geek Dinner. I was thrilled when my friend &lt;a href="http://daphnechong.com/"&gt;Daphne&lt;/a&gt; decided to organise a &lt;a href="http://codesydney.com/2015-algorithms/"&gt;group&lt;/a&gt; on her own to study algorithms.&lt;/p&gt;

&lt;p&gt;The course we&amp;#39;re going through is Princeton&amp;#39;s intro to algorithms, and it is &lt;em&gt;hard!&lt;/em&gt; It started a few days ago, and just getting through the lectures took quite some time. But it&amp;#39;s really interesting. I&amp;#39;m keeping my &lt;a href="http://1drv.ms/1tdZuA6"&gt;notes online&lt;/a&gt; so I can share them with anyone interested. This blog post doesn&amp;#39;t have a lot of content, but I promise the link to my notes does. The course has been keeping me pretty busy, so I figured I should get at least one blog post up about it!&lt;/p&gt;

&lt;p&gt;Many thanks to Daphne, and here&amp;#39;s to more learning in 2015!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>I have a new job!</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/new-job/"/>
    <id>http://lucybain.com/blog/2015/new-job/</id>
    <published>2015-01-22T00:00:00Z</published>
    <updated>2015-03-19T21:09:40+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Well apparently all this studying has paid off! I’ve been interviewing with a few companies since before Christmas, and I’m pleased to announce that today I accepted an offer from Atlassian. I’ll be working as a junior front end developer on Stash, starting on Feb 23 (visa pending).&lt;/p&gt;

&lt;p&gt;Last March I wrote a &lt;a href="/blog/2014/front-end/"&gt;post&lt;/a&gt; about wanting to become a front end developer and I’m really proud of myself that I made it :)&lt;/p&gt;

&lt;p&gt;I hope I can level up a bit faster this time around - I certainly feel that I have a better understanding of my programming knowledge with JS than I did with Ruby. My goal is to continue learning JS, but with more intention than I learned Ruby. I fell into Ruby when my company decided to switch languages, and I didn’t do a good job pushing myself to learn more. This time I want to do better - hopefully this blog will hold me to it.&lt;/p&gt;

&lt;h1&gt;How I got here&lt;/h1&gt;

&lt;p&gt;In case anyone is interested what I did to make myself more employable for a language I have very little experience with:&lt;/p&gt;

&lt;h2&gt;Started a study group&lt;/h2&gt;

&lt;p&gt;This was probably the most important thing - it showed that I was committed to learning JS. It also forced me to interact with the members of the JS community since they were mentors in the group. I met some people I would interview with at this study group.&lt;/p&gt;

&lt;h2&gt;Demo projects&lt;/h2&gt;

&lt;p&gt;As part of the study group I built a series of &lt;a href="/code-sydney-work/"&gt;demo projects&lt;/a&gt; and put their code on &lt;a href="https://github.com/lbain/code-sydney-work"&gt;github&lt;/a&gt;. This meant that people could see my level when they reviewed my resume. It also meant I had time to practice what I was studying.&lt;/p&gt;

&lt;h2&gt;Practice interview questions&lt;/h2&gt;

&lt;p&gt;This was actually far more valuable than I expected. I thought the questions would be more varied than what I found on some github repo, but those questions (and there are a lot of them) are a good representation of what I actually got. Most of the time I couldn’t remember the actual syntax to do something and the interviewer would help me through, but I usually knew the concept they were referring to.&lt;/p&gt;

&lt;p&gt;There were a number of interview questions I hadn’t reviewed and didn’t know the answer to. When these came up I asked the interviewer to explain them to me and tried to then explain it back to them to make sure I’d understood (and to show them what I great learner I am, because I’ll be doing a bunch of that on the job!). I also wrote these questions down so I could review them (and write blog posts) in the future.&lt;/p&gt;

&lt;h2&gt;JavaScript: the good parts&lt;/h2&gt;

&lt;p&gt;This wasn’t as useful as I’d hoped. I think I should have read it before my study group, and tried to put the theory into practice as I wrote my demo projects. In the end the book was a useful review of a lot of the concepts we’d talked about in study group or that had come up in my review of interview questions, but it wasn’t a great way for me to learn new concepts at this point.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JS: How does ajax work?</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/js-how-does-ajax-work/"/>
    <id>http://lucybain.com/blog/2015/js-how-does-ajax-work/</id>
    <published>2015-01-10T00:00:00Z</published>
    <updated>2015-03-19T21:09:40+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;How does AJAX work?&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s start smaller: &lt;strong&gt;What does AJAX stand for?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;synchronous &lt;strong&gt;J&lt;/strong&gt;avaScript &lt;strong&gt;a&lt;/strong&gt;nd &lt;strong&gt;X&lt;/strong&gt;ML (I think using the &amp;quot;a&amp;quot; in &amp;quot;and&amp;quot; is a little bit of a cheat, but there you go.)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So how does it work?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After loading, the client uses &lt;strong&gt;J&lt;/strong&gt;avaScript to fire off a request to the server and listens to the response &lt;strong&gt;a&lt;/strong&gt;synchronously. The response that comes back can be &lt;strong&gt;X&lt;/strong&gt;ML, but is often other formats, most often JSON (officially this is known as AJAJ, but everyone still calls it AJAX).&lt;/p&gt;

&lt;p&gt;The bit that makes AJAX so powerful is that it can update the page &lt;em&gt;after&lt;/em&gt; it has finished loading. Before AJAX any new content required an entire page refresh, even if it was only a small change. This meant that users had to redownload a page for very little updated content (especially annoying in the 90s since home internet wasn&amp;#39;t as fast then). Using AJAX meant that the front end could change without a full page refresh, thus giving a much faster response time.&lt;/p&gt;

&lt;p&gt;Origially AJAX mostly returned HTML/XML snipits and the DOM would get updated with this new code when the AJAX returned. Now, however, it&amp;#39;s more common for AJAX to get data and update the DOM as needed rather than doing a swap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Ajax_%28programming%29"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1510011/how-does-ajax-work"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/Learn/What_is_AJAX_and_how_does_it_work"&gt;Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>JS: When would you use document.write()?</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/js-document-write/"/>
    <id>http://lucybain.com/blog/2015/js-document-write/</id>
    <published>2015-01-06T00:00:00Z</published>
    <updated>2015-03-19T21:09:40+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;When would you use &lt;code&gt;document.write()&lt;/code&gt;?&lt;/h2&gt;

&lt;p&gt;First, what is &lt;code&gt;document.write()&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;As you might have guessed, &lt;code&gt;document.write()&lt;/code&gt; writes to the document (a.k.a web page). It takes the content you want to write as a parameter. An invocation could look like this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;document.write("&amp;lt;h1&amp;gt;JS is awesome!&amp;lt;/h1&amp;gt;");
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Problems with &lt;code&gt;document.write()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try running the code above in the console of a web page (not this one!), go ahead, I&amp;#39;ll wait.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll notice that it replaced the entire content of the &lt;code&gt;document&lt;/code&gt; with the header &lt;code&gt;&amp;quot;JS is awesome!&amp;quot;&lt;/code&gt;. Obviously that&amp;#39;s a problem right there - &lt;code&gt;document.write()&lt;/code&gt; shouldn&amp;#39;t be used after the page has loaded to change the content as it will overwrite the entire page (probably not what you wanted to happen...).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;document.write()&lt;/code&gt; doesn&amp;#39;t work for XHTML pages. I&amp;#39;ve only been concerned with HTML so far, so I&amp;#39;m not too fussed about this one. But it might be more relevant in your case.&lt;/p&gt;

&lt;p&gt;Some people think &lt;code&gt;document.write()&lt;/code&gt; is a good solution for loading more files (JS or CSS) into the dom after the initial load. Turns out this is not the case, as this is slower than creating a new element (script or a css link) and inserting it into the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Possible situations to use &lt;code&gt;document.write()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It seems that the only &amp;quot;approved&amp;quot; time to use &lt;code&gt;document.write()&lt;/code&gt; is for third party code to be included (such as ads or Google Analytics). Since &lt;code&gt;document.write()&lt;/code&gt; is always available (mostly) it is a good choice for third party vendors to use it to add their scripts. They don&amp;#39;t know what environment you&amp;#39;re using, if jQuery is or isn&amp;#39;t available, or what your &lt;code&gt;onload&lt;/code&gt; events are. And with &lt;code&gt;document.write()&lt;/code&gt; they don&amp;#39;t have to.&lt;/p&gt;

&lt;p&gt;So don&amp;#39;t use it yourself, unless your working for the third party.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/802854/why-is-document-write-considered-a-bad-practice"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/document.write"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stevesouders.com/blog/2012/04/10/dont-docwrite-scripts/"&gt;steve Souders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.quirksmode.org/blog/archives/2005/06/three_javascrip_1.html"&gt;Quirksmode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Retro from my coding test</title>
    <link rel="alternate" href="http://lucybain.com/blog/2015/code-test-retro/"/>
    <id>http://lucybain.com/blog/2015/code-test-retro/</id>
    <published>2015-01-02T00:00:00Z</published>
    <updated>2015-03-19T21:09:40+11:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;#39;ve been looking for a new job over the past month. As part of my interview process I had to do an at home coding exercise. The directions were simple, but disconcertingly vague:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The application should run successfully in modern browsers.
Your app should retrieve a data set from a persistence layer or data service of your choice.&lt;/li&gt;
&lt;li&gt;The data set should contain a minimum of 4 columns and 5 rows.&lt;/li&gt;
&lt;li&gt;Create a README file with instructions, a brief description of your app with reasons for your approach and technology as well as any future enhancements you would make given more time&lt;/li&gt;
&lt;li&gt;Bundle your app in a zip file and email to [the company]&lt;/li&gt;
&lt;li&gt;Allow up to 3 hours for this task. Please be honest with your allocation of time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, so three hours is way too long for a simple AJAX call and display of four columns and five rows. So I figured they wanted something a little more interesting than a table of data. I also didn&amp;#39;t want to waste any of my precious three hours working on a back-end - I applied for a front-end role and that&amp;#39;s what I wanted to work on. I decided to work with data from Facebook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; It turns out there&amp;#39;s a TON of very interesting &lt;a href="https://www.reddit.com/r/datasets"&gt;data avaialble&lt;/a&gt;. If you have to do anything like this in the future look into these rather than using FB!&lt;/p&gt;

&lt;p&gt;I wanted to work with something real that users might care about. I also wanted to get more experience with working with Facebook since it&amp;#39;s often used on sites. These were great reasons to choose Facebook, but, as it turns out, probably not a good decision for a coding test. Working with FB requires OAuth and a bunch of setup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Don&amp;#39;t try to work with anything particularly complex for your coding test. It&amp;#39;s better that you do a simple thing well than that you don&amp;#39;t finish a complex thing.&lt;/p&gt;

&lt;p&gt;Thankfully I used a library called &lt;a href="http://adodson.com/hello.js/"&gt;hello.js&lt;/a&gt; that took care of most of the setup. However I had never worked with hello.js before and getting up to speed with it took time - which I was rapidly running out of. I ended up wasting an hour trying to debug &lt;a href="http://stackoverflow.com/questions/27729186/how-can-i-get-share-data-with-hello-js"&gt;something&lt;/a&gt; which I never really got an answer to - I ended up going a different direction and resetting the clock for that hour.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Don&amp;#39;t work with new technologies / libraries / languages for your coding test. Focus on what you&amp;#39;re already good at and do that thing well.&lt;/p&gt;

&lt;p&gt;I got all my interaction working as expected and then got moving on the styling. I grabbed a generated colour pallet from &lt;a href="http://coolors.co/"&gt;coolors.co&lt;/a&gt; and set up some base styles. It wasn&amp;#39;t anything fancy, it was kinda mobile friendly, but only in the roughest sense, and things looked sorta ok. But it worked, and it no longer looked like simple HTML. This was a success, I&amp;#39;m pleased with the amount of time I spent on styling.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Styling matters. It&amp;#39;s the first thing your users (read graders) will see. Don&amp;#39;t just gloss over it because it&amp;#39;s not your main love. That said, your users will know that you only had a set amount of time to work on something. This does not need to be pixel perfect. Make it nice, but don&amp;#39;t waste your time.&lt;/p&gt;

&lt;p&gt;Finally it was time to run some full tests. I grabbed my partner and asked him to try logging in with my app so I could get his user details (photos). No dice. Errors. Panic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; When you&amp;#39;re developing your code test, try to test it in the same environment the user will have as early as possible. Identify possible rough patches and take note. Even if you can&amp;#39;t fix them you can at least know you&amp;#39;ll need to include something about them in the readme.&lt;/p&gt;

&lt;p&gt;As I found out in my increasingly stressed out state - FB requires you to officially publish your app before you&amp;#39;re allowed to get the public to use it (fair enough, but I had hours before my test was due). I also learned that the process would take around seven days, but that it&amp;#39;s possible my app could be rejected and take longer. I was full on freaking out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Much like in school, you should start your coding test as soon as you get your assignment.&lt;/p&gt;

&lt;p&gt;I finally worked out that if I made my partner a developer for the app he would have access to it, and thus be able to see all the hard work I&amp;#39;d done. I calmed down a bit and made sure everything was working as it should from then it. (It was; that was the bit I was able to easily test using my own account.)&lt;/p&gt;

&lt;p&gt;That was the end of my three hours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Make sure you write down the start and end times of any work sections you do. I thought I&amp;#39;d remember, and I&amp;#39;m pretty sure I was fairly accurate, but I&amp;#39;m sure I wasn&amp;#39;t perfect. Guesstimating exactly how many minutes you&amp;#39;ve spent on a coding test is stress you don&amp;#39;t need.&lt;/p&gt;

&lt;p&gt;I moved on to the readme. I was actually pretty pleased how this turned out. In their directions they included what they expected from a readme (&amp;quot;a brief description of your app with reasons for your approach and technology as well as any future enhancements you would make given more time&amp;quot;), which was my guide. I also included a section about how to use my app, since they had to request permission to be a developer in order to get it working.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Try to make it as easy as possible for your reviewers to grade your code. Keep the install process as short, and your explanation of the install process as clear, as possible.&lt;/p&gt;

&lt;p&gt;I spent the most time on the &amp;quot;future enhancements&amp;quot; which included a lot about refactoring. I wasn&amp;#39;t able to do everything I wanted to have beautiful code given the time constraints. I wanted them to know that I knew things weren&amp;#39;t perfect. This was a good tactic - the couple of things they asked me about in my next interview were a the things I hadn&amp;#39;t mentioned in my readme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; The more questions you can answer in your readme (in the comfort of your own home), the fewer you have to answer in the interview (with someone staring at you).&lt;/p&gt;

&lt;p&gt;And that was it! It was pretty stressful, so I hope the next time I need to do a coding test I&amp;#39;ll have learned a little and can stay a bit more calm!&lt;/p&gt;
</content>
  </entry>
</feed>
