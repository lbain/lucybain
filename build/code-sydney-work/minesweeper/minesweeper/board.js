function getRandomArbitrary(o){return Math.floor(Math.random()*o)}function Board(o,t){return this.gridSize=o,this.grid=[],this.bombCount=t,this.lost=!1,this.setupGrid(),this.generateBombs(),this}Board.prototype.isFinished=function(){return this.lost||this.isWon()},Board.prototype.isWon=function(){for(var o=!0,t=0;t<board.gridSize;t++)for(var r=0;r<board.gridSize;r++){var i=this.cellAtPos(t,r);o=o&&i.bomb!==i.found}return o},Board.prototype.setupGrid=function(){for(var o=0;o<this.gridSize;o++){this.grid[o]=[];for(var t=0;t<this.gridSize;t++)this.grid[o][t]=new Cell(o,t)}},Board.prototype.generateBombs=function(){for(var o=0;o<this.bombCount;o++){var t=this.randomPosition(),r=this.randomPosition(),i=this.cellAtPos(t,r);i.bomb&&o--,i.bomb=!0,this.updateCellCounts(i)}},Board.prototype.loopOverCellNeighbors=function(o,t){for(var r=o.row-1;r<=o.row+1;r++)for(var i=o.col-1;i<=o.col+1;i++){var e=this.cellAtPos(r,i);e&&t(e)}},Board.prototype.updateCellCounts=function(o){this.loopOverCellNeighbors(o,function(o){o.count++})},Board.prototype.revealNearCells=function(o){var t=this;this.loopOverCellNeighbors(o,function(o){o.bomb||o.found||(o.found=!0,0===o.count&&t.revealNearCells(o))})},Board.prototype.makeMove=function(o,t){var r=this.cellAtPos(o,t);r.bomb?this.lost=!0:r.count>0?r.found=!0:this.revealNearCells(r)},Board.prototype.randomPosition=function(){return getRandomArbitrary(this.gridSize)},Board.prototype.cellAtPos=function(o,t){var r=this.grid[o];return r?this.grid[o][t]:void 0};