JS interview topics left

* How do you organize your code? (module pattern, classical inheritance?)
* Difference between: function Person(){}, var person = Person(), and var person = new Person()?
* Have you ever used JavaScript templating?
  If so, what libraries have you used? (Mustache.js, Handlebars etc.)
* arguments keyword
* the + opperator: What does “1”+2+4 evaluate to? What about 5 + 4 + “3”?
* XSS
* JSON
* objects

* How do you go about testing your JavaScript?
* When do you optimize your code?

See email
* How can you use closures to implement public/private methods?
* What’s the difference when invoking a function with or without the new keyword?
* What types of things are potentially dangerous to define on the prototype?
* How can you change the execution context of a function/method? (use bind, call, and apply) - kind of did this one, but not all together and I'd like to review
* How can you force a JavaScript function to execute asynchronously?
What are some ways of managing lots of asyc operations (AKA avoiding callback hell)?
* How do promises/deferreds work?
* anonymous function and hoisting

